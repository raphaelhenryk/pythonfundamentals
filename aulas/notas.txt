
git init

git config user.name
git config user.email

git config --global user.name "raphaelhenryk" 
git config --global user.email "rhssraphael@gmail.com"

--criar uma chave publica e uma priada para o github
ssh -keygen

--mostrar os diretório ocultos
ls -a

--criar o diretorio do projeto
mkdir pythonfundamentals

--iniciar o git a partir do diretorio
git init

--criar o arqivo README
echo "# Curso Python Fundamentals" >>README.md

--ver os arquivos a serem  gerenciados pelo git
git status

--incluir todos os arquivos do diretorio para serem gerenciados pelo git
git add .

--adicionar o diretório remoto do github para onde serão comitados os codigos
git remote add origin https://github.com/raphaelhenryk/pythonfundamentals.git

--clonar um repo
git clone git@github.com:raphaelhenryk/pythonfundamentals.git

--criar um commit
git commit -m "First Commit"

--executar o commit (enviar as alterações de codigo da maquina para o servidor)
git push -u origin master


=========================||||||||=========================

--Tipos de dados

Inteiro: Numeros inteiros
	1,2,20,100,1000

Float: Numero com pontos flutuantes
	1.1, 3.1, 54.7

String: Palavras, Conjunto de caracteres
	'Raphael','199','idade'

Comentarios de unica linha:hashtag
	#inicia o loop

Docstring: Documentação do códgo
	'''
	inicia o loop
	'''


--Variável: Espaço em memória onde aloca-se valores
nome = 'Raphael'
print(nome)

--Input de dados
 n1 = float(input('Digite a primeira nota: '))
 n2 = float(input('Digite a segunda nota: '))
 n3 = float(input('Digite a terceira nota: '))
 n4 = float(input('Digite a quarta nota: '))

--Output  dados
# nfinal = (n1+n2+n3+n4)/4
# print(nfinal)

--CONSTANTE
no python não existe constante. 


--Objetos
Tudo no python são objetos.
Objetos podem sofrer ações, através de métodos.


sudo apt install python-pip
sudo apt install python3-pip

/usr/bin/python3 -m pip install -U pep8 --user
pip install virtualenv

virtualenv -p python3 venv

. venv/bin/activate
. venv/bin/deactivate

python --version

pip install pandas

pip freeze > requirements.txt

.gitignore : ignora os arquivos que não serão comitados.


Métodos de Lista:
lista.append('Santos') - adiciona Santos ao final da lista
lista.insert(0,'Sport') - adiciona Sport ao à lista, de acordo com o index
lista.remove('Sport') - Remove Sport da lista, de acordo com o index
lista.pop(0) - Remove o item da lista, de acordo com o index

lista.sort()
l = sorted(lista) - Ordena os itens da lita


==========================================AULA 2===========================================
Métodos de String:

texto = 'Isso é um texto'

texto.upper()
texto.lower()
texto.capitalize()
print(texto.split(''))


